{"meta":{"title":"Raider's Blog","subtitle":"应无所住，而生其心","description":"Raider blog","author":"Raider Yang","url":"http://yanggw.tk"},"pages":[],"posts":[{"title":"","slug":"User-Profile","date":"2017-07-18T12:28:02.684Z","updated":"2017-07-18T12:28:02.684Z","comments":true,"path":"2017/07/18/User-Profile/","link":"","permalink":"http://yanggw.tk/2017/07/18/User-Profile/","excerpt":"","text":"如何构建用户画像标签（空格分隔）： 用户画像 客户分析 从1991年Tim Berners-Lee发明了万维网（World Wide Web）开始，到20年后2011年，互联网真正走向了一个新的里程碑，进入了“大数据时代”。经历了12、13两年热炒之后，人们逐渐冷静下来，更加聚焦于如何利用大数据挖掘潜在的商业价值，如何在企业中实实在在的应用大数据技术。伴随着大数据应用的讨论、创新，个性化技术成为了一个重要落地点。相比传统的线下会员管理、问卷调查、购物篮分析，大数据第一次使得企业能够通过互联网便利地获取用户更为广泛的反馈信息，为进一步精准、快速地分析用户行为习惯、消费习惯等重要商业信息，提供了足够的数据基础。伴随着对人的了解逐步深入，一个概念悄然而生：用户画像（UserProfile），完美地抽象出一个用户的信息全貌，可以看作企业应用大数据的根基。 1.什么是用户画像？男，31岁，已婚，收入1万以上，爱美食，团购达人，喜欢红酒配香烟。这样一串描述即为用户画像的典型案例。如果用一句话来描述，即：用户信息标签化。如果用一幅图来展现，即： 2.为什么需要用户画像用户画像的核心工作是为用户打标签，打标签的重要目的之一是为了让人能够理解并且方便计算机处理，如，可以做分类统计：喜欢红酒的用户有多少？喜欢红酒的人群中，男、女比例是多少？ 也可以做数据挖掘工作：利用关联规则计算，喜欢红酒的人通常喜欢什么运动品牌？利用聚类算法分析，喜欢红酒的人年龄段分布情况？ 大数据处理，离不开计算机的运算，标签提供了一种便捷的方式，使得计算机能够程序化处理与人相关的信息，甚至通过算法、模型能够“理解” 人。当计算机具备这样的能力后，无论是搜索引擎、推荐引擎、广告投放等各种应用领域，都将能进一步提升精准度，提高信息获取的效率。 3.如何构建用户画像一个标签通常是人为规定的高度精炼的特征标识，如年龄段标签：25~35岁，地域标签：北京，标签呈现出两个重要特征：语义化，人能很方便地理解每个标签含义。这也使得用户画像模型具备实际意义。能够较好的满足业务需求。如，判断用户偏好。短文本，每个标签通常只表示一种含义，标签本身无需再做过多文本分析等预处理工作，这为利用机器提取标准化信息提供了便利。 人制定标签规则，并能够通过标签快速读出其中的信息，机器方便做标签提取、聚合分析。所以，用户画像，即：用户标签，向我们展示了一种朴素、简洁的方法用于描述用户信息。 3.1 数据源分析 构建用户画像是为了还原用户信息，因此数据来源于：所有用户相关的数据。 对于用户相关数据的分类，引入一种重要的分类思想：封闭性的分类方式。如，世界上分为两种人，一种是学英语的人，一种是不学英语的人；客户分三类，高价值客户，中价值客户，低价值客户；产品生命周期分为，投入期、成长期、成熟期、衰退期…所有的子分类将构成了类目空间的全部集合。 这样的分类方式，有助于后续不断枚举并迭代补充遗漏的信息维度。不必担心架构上对每一层分类没有考虑完整，造成维度遗漏留下扩展性隐患。另外，不同的分类方式根据应用场景，业务需求的不同，也许各有道理，按需划分即可。 本文将用户数据划分为静态信息数据、动态信息数据两大类。 静态信息数据 用户相对稳定的信息，如图所示，主要包括人口属性、商业属性等方面数据。这类信息，自成标签，如果企业有真实信息则无需过多建模预测，更多的是数据清洗工作，因此这方面信息的数据建模不是本篇文章重点。 动态信息数据 用户不断变化的行为信息，如果存在上帝，每一个人的行为都在时刻被上帝那双无形的眼睛监控着，广义上讲，一个用户打开网页，买了一个杯子；与该用户傍晚溜了趟狗，白天取了一次钱，打了一个哈欠等等一样都是上帝眼中的用户行为。当行为集中到互联网，乃至电商，用户行为就会聚焦很多，如上图所示：浏览凡客首页、浏览休闲鞋单品页、搜索帆布鞋、发表关于鞋品质的微博、赞“双十一大促给力”的微博消息。等等均可看作互联网用户行为。 本篇文章以互联网电商用户，为主要分析对象，暂不考虑线下用户行为数据（分析方法雷同，只是数据获取途径，用户识别方式有些差异）。 在互联网上，用户行为，可以看作用户动态信息的唯一数据来源。如何对用户行为数据构建数据模型，分析出用户标签，将是本文着重介绍的内容。 3.2 目标分析用户画像的目标是通过分析用户行为，最终为每个用户打上标签，以及该标签的权重。如，红酒 0.8、李宁 0.6。 标签，表征了内容，用户对该内容有兴趣、偏好、需求等等。 权重，表征了指数，用户的兴趣、偏好指数，也可能表征用户的需求度，可以简单的理解为可信度，概率。 3.3 数据建模方法下面内容将详细介绍，如何根据用户行为，构建模型产出标签、权重。一个事件模型包括：时间、地点、人物三个要素。每一次用户行为本质上是一次随机事件，可以详细描述为：什么用户，在什么时间，什么地点，做了什么事。 什么用户：关键在于对用户的标识，用户标识的目的是为了区分用户、单点定位。 以上列举了互联网主要的用户标识方法，获取方式由易到难。视企业的用户粘性，可以获取的标识信息有所差异。 什么时间：时间包括两个重要信息，时间戳+时间长度。时间戳，为了标识用户行为的时间点，如，1395121950（精度到秒），1395121950.083612（精度到微秒），通常采用精度到秒的时间戳即可。因为微秒的时间戳精度并不可靠。浏览器时间精度，准确度最多也只能到毫秒。时间长度，为了标识用户在某一页面的停留时间。 什么地点：用户接触点，Touch Point。对于每个用户接触点。潜在包含了两层信息：网址 + 内容。网址：每一个url链接（页面/屏幕），即定位了一个互联网页面地址，或者某个产品的特定页面。可以是PC上某电商网站的页面url，也可以是手机上的微博，微信等应用某个功能页面，某款产品应用的特定画面。如，长城红酒单品页，微信订阅号页面，某游戏的过关页。 内容：每个url网址（页面/屏幕）中的内容。可以是单品的相关信息：类别、品牌、描述、属性、网站信息等等。如，红酒，长城，干红，对于每个互联网接触点，其中网址决定了权重；内容决定了标签。 注：接触点可以是网址，也可以是某个产品的特定功能界面。如，同样一瓶矿泉水，超市卖1元，火车上卖3元，景区卖5元。商品的售卖价值，不在于成本，更在于售卖地点。标签均是矿泉水，但接触点的不同体现出了权重差异。这里的权重可以理解为用户对于矿泉水的需求程度不同。即，愿意支付的价值不同。 标签 权重 矿泉水 1 // 超市 矿泉水 3 // 火车 矿泉水 5 // 景区 类似的，用户在京东商城浏览红酒信息，与在品尚红酒网浏览红酒信息，表现出对红酒喜好度也是有差异的。这里的关注点是不同的网址，存在权重差异，权重模型的构建，需要根据各自的业务需求构建。 所以，网址本身表征了用户的标签偏好权重。网址对应的内容体现了标签信息。 什么事：用户行为类型，对于电商有如下典型行为：浏览、添加购物车、搜索、评论、购买、点击赞、收藏 等等。 不同的行为类型，对于接触点的内容产生的标签信息，具有不同的权重。如，购买权重计为5，浏览计为1 红酒 1 // 浏览红酒 红酒 5 // 购买红酒 综合上述分析，用户画像的数据模型，可以概括为下面的公式：用户标识 + 时间 + 行为类型 + 接触点（网址+内容），某用户因为在什么时间、地点、做了什么事。所以会打上**标签。 用户标签的权重可能随时间的增加而衰减，因此定义时间为衰减因子r，行为类型、网址决定了权重，内容决定了标签，进一步转换为公式： 标签权重=衰减因子×行为权重×网址子权重 如：用户A，昨天在品尚红酒网浏览一瓶价值238元的长城干红葡萄酒信息。 标签：红酒，长城时间：因为是昨天的行为，假设衰减因子为：r=0.95行为类型：浏览行为记为权重1地点：品尚红酒单品页的网址子权重记为 0.9（相比京东红酒单品页的0.7）假设用户对红酒出于真的喜欢，才会去专业的红酒网选购，而不再综合商城选购。 则用户偏好标签是：红酒，权重是0.950.7 1=0.665，即，用户Ａ：红酒 0.665、长城 0.665。 上述模型权重值的选取只是举例参考，具体的权重值需要根据业务需求二次建模，这里强调的是如何从整体思考，去构建用户画像模型，进而能够逐步细化模型。 4.总结本文并未涉及具体算法，更多的是阐述了一种分析思想，在计划构建用户画像时，能够给您提供一个系统性、框架性的思维指导。 核心在于对用户接触点的理解，接触点内容直接决定了标签信息。内容地址、行为类型、时间衰减，决定了权重模型是关键，权重值本身的二次建模则是水到渠成的进阶。模型举例偏重电商，但其实，可以根据产品的不同，重新定义接触点。 比如影视产品，我看了一部电影《英雄本色》，可能产生的标签是：周润发 0.6、枪战 0.5、港台 0.3。 最后，接触点本身并不一定有内容，也可以泛化理解为某种阈值，某个行为超过多少次，达到多长时间等。 比如游戏产品，典型接触点可能会是，关键任务，关键指数（分数）等等。如，积分超过1万分，则标记为钻石级用户。钻石用户 1.0。 百分点现已全面应用用户画像技术于推荐引擎中，在对某电商客户，针对活动页新访客的应用中，依靠用户画像产生的个性化效果，对比热销榜，推荐效果有显著提升：推荐栏点击率提升27%， 订单转化率提升34%。","categories":[],"tags":[]},{"title":"","slug":"ml-maizi-1","date":"2017-07-18T12:28:02.684Z","updated":"2017-07-18T12:28:02.684Z","comments":true,"path":"2017/07/18/ml-maizi-1/","link":"","permalink":"http://yanggw.tk/2017/07/18/ml-maizi-1/","excerpt":"","text":"机器学习 （Machine Learning, ML)标签（空格分隔）：机器学习 Machine Learning, ML 2. 机器学习 （Machine Learning, ML)2.1 概念：多领域交叉学科，涉及概率论、统计学、逼近论、凸分析、算法复杂度理论等多门学科。专门研究计算机怎样模拟或实现人类的学习行为，以获取新的知识或技能，重新组织已有的知识结构使之不断改善自身的性能。2.2 学科定位：人工智能(Artificial Intelligence, AI）的核心，是使计算机具有智能的根本途径，其应用遍及人工智能的各个领域，它主要使用归纳、综合而不是演绎。2.3 定义：探究和开发一系列算法来如何使计算机不需要通过外部明显的指示，而可以自己通过数据来学习，建模，并且利用建好的模型和新的输入来进行预测的学科。Arthur Samuel (1959): 一门不需要通过外部程序指示而让计算机有能力自我学习的学科 Langley（1996) ： “机器学习是一门人工智能的科学，该领域的主要研究对象是人工智能，特别是如何在经验学习中改善具体算法的性能” Tom Michell (1997): “机器学习是对能通过经验自动改进的计算机算法的研究” 2.4： 学习：针对经验E (experience) 和一系列的任务 T (tasks) 和一定表现的衡量 P，如果随之经验E的积累，针对定义好的任务T可以提高表现P，就说计算机具有学习能力例子： 下棋，语音识别，自动驾驶汽车等 3. 机器学习的应用：语音识别 自动驾驶 语言翻译 计算机视觉 推荐系统 无人机 识别垃圾邮件 4. Demo：人脸识别 无人驾驶汽车 电商推荐系统 5. 置业市场需求：LinkedIn所有职业技能需求量第一：机器学习，数据挖掘和统计分析人才","categories":[],"tags":[]},{"title":"","slug":"scala-curry-1","date":"2017-07-18T12:28:02.684Z","updated":"2017-07-18T12:28:02.684Z","comments":true,"path":"2017/07/18/scala-curry-1/","link":"","permalink":"http://yanggw.tk/2017/07/18/scala-curry-1/","excerpt":"","text":"Scala中=&gt;的用法=&gt;的用法 1、我们在定义函数值（function value）的时候需要用到=&gt;，如：123var increase = (x: Int) =&gt; x + 1 scala&gt; increase(10)res9: Int = 11 在这里它的作用是指定函数值的具体操作,还可以进行这样的定义1val b=(x:Int)=&gt;(y:Int)=&gt;x+y 可以在curry化的介绍中找到相应解释12scala&gt; b(2)(3)res8: Int = 5 12345scala&gt; val f2: Int =&gt; String = myInt =&gt; &quot;my int v2: &quot;+myInt.toString f2: (Int) =&gt; String = &lt;function1&gt; scala&gt; f2(1) res1: String = my int v2: 1 =&gt; is syntactic sugar for creating instances of functions. Recall that every function in scala is an instance of a class. For example, the type Int =&gt; String, is equivalent to the type Function1[Int,String] i.e. a function that takes an argument of type Int and returns a String.1234567891011scala&gt; val f: Function1[Int,String] = myInt =&gt; &quot;my int: &quot;+myInt.toStringf: (Int) =&gt; String = &lt;function1&gt;scala&gt; f(0)res0: String = my int: 0scala&gt; val f2: Int =&gt; String = myInt =&gt; &quot;my int v2: &quot;+myInt.toStringf2: (Int) =&gt; String = &lt;function1&gt;scala&gt; f2(1)res1: String = my int v2: 1 Here myInt is binded to the argument value passed to f and f2. () =&gt; T is the type of a function that takes no arguments and returns a T. It is equivalent to Function0[T]. () is called a zero parameter list I believe.12345scala&gt; val f: () =&gt; Unit = () =&gt; &#123; println(&quot;x&quot;)&#125;f: () =&gt; Unit = &lt;function0&gt;scala&gt; f()x scala&gt; val f2: Function0[Unit] = () =&gt; println(“x2”)f: () =&gt; Unit = scala&gt; f2()x2","categories":[],"tags":[]},{"title":"","slug":"tensorflow-readme","date":"2017-07-18T12:28:02.684Z","updated":"2017-07-18T12:28:02.684Z","comments":true,"path":"2017/07/18/tensorflow-readme/","link":"","permalink":"http://yanggw.tk/2017/07/18/tensorflow-readme/","excerpt":"","text":"Google第二代机器学习系统 TensorFlow缘起2015年11月9日，Google 官方在其博客上称，Google Research 宣布推出第二代机器学习系统 TensorFlow，针对先前的 DistBelief 的短板有了各方面的加强，更重要的是，它是开源的，任何人都可以用。 机器学习作为人工智能的一种类型，可以让软件根据大量的数据来对未来的情况进行阐述或预判。如今，领先的科技巨头无不在机器学习下予以极大投入。Facebook、苹果、微软，甚至国内的百度。Google 自然也在其中。「TensorFlow」是 Google 多年以来内部的机器学习系统。如今，Google 正在将此系统成为开源系统，并将此系统的参数公布给业界工程师、学者和拥有大量编程能力的技术人员，这意味着什么呢？ 打个不太恰当的比喻，如今 Google 对待 TensorFlow 系统，有点类似于该公司对待旗下移动操作系统 Android。如果更多的数据科学家开始使用 Google 的系统来从事机器学习方面的研究，那麽这将有利于 Google 对日益发展的机器学习行业拥有更多的主导权。 为了让国内的技术人员在最短的时间内迅速掌握这一世界领先的 AI 系统，极客学院 Wiki 团队发起对 TensorFlow 官方文档的中文协同翻译。 欢迎各路人工智能及机器学习领域的专家和爱好者参与这一翻译项目，我们会为每位翻译和校对人员署名。 一起来参与如果想做出贡献(翻译或者校对)的话，请加QQ群：248320884，谢谢！ PS: 想探讨TensorFlow技术的可以加”TensorFlow技术交流群”：495115006 内容来源英文官方网站：http://tensorflow.org/ 官方GitHub仓库：https://github.com/tensorflow/tensorflow 中文版 GitHub 仓库：https://github.com/jikexueyuanwiki/tensorflow-zh","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-07-18T12:28:02.683Z","updated":"2017-07-18T12:28:02.683Z","comments":true,"path":"2017/07/18/hello-world/","link":"","permalink":"http://yanggw.tk/2017/07/18/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"","slug":"awesome-quant-res","date":"2017-07-18T12:28:02.683Z","updated":"2017-07-18T12:28:02.683Z","comments":true,"path":"2017/07/18/awesome-quant-res/","link":"","permalink":"http://yanggw.tk/2017/07/18/awesome-quant-res/","excerpt":"","text":"Awesome Quant 一份精心挑选的中文Quant相关资源索引。 目录 数据源 数据库 量化交易平台 策略 回测 交易API 编程 Python R C++ Julia 论坛 书籍 论文 政策 值得关注的信息源 其他Quant资源索引 数据源 TuShare - 中文财经数据接口包 Quandl - 国际金融和经济数据 Wind资讯-经济数据库 - 收费 锐思数据 - 首页 - 收费 国泰安数据服务中心 - 收费 恒生API - 收费 Bloomberg API - 收费 数库金融数据和深度分析API服务 - 收费 Historical Data Sources - 一个数据源索引 数据库 manahl/arctic: High performance datastore for time series and tick data - 基于mongodb和python的高性能时间序列和tick数据存储 kdb | The Leader in High-Performance Tick Database Technology | Kx Systems - 收费的高性能金融序列数据库解决方案 MongoDB Blog - 用mongodb存储时间序列数据 InfluxDB – Time-Series Data Storage | InfluxData - Go写的分布式时间序列数据库 OpenTSDB/opentsdb: A scalable, distributed Time Series Database. - 基于HBase的时间序列数据库 kairosdb/kairosdb: Fast scalable time series database - 基于Cassandra的时间序列数据库 量化交易平台 JoinQuant聚宽量化交易平台 - 一个基于Python的在线量化交易平台 优矿 - 通联量化实验室 - 一个基于Python的在线量化交易平台 Ricequant 量化交易平台 - 支持Python和Java的在线量化交易平台 掘金量化 - 支持C/C++、C#、MATLAB、Python和R的量化交易平台 Auto-Trader - 基于MATLAB的量化交易平台 MultiCharts 中国版 - 程序化交易软件 BotVS - 首家支持传统期货与股票证券与数字货币的量化平台 Tradeblazer(TB) - 交易开拓者 - 期货程序化交易软件平台 MetaTrader 5 - Multi-Asset Trading Platform 策略 JoinQuant聚宽: 量化学习资料、经典交易策略、Python入门 - 雪球 myquant/strategy: 掘金策略集锦 优矿社区内容索引 RiceQuant米筐量化社区 2016年4月以来优秀策略与研究汇总 雪球选股 botvs/strategies: 用Javascript OR Python进行量化交易 回测 Zipline - 一个Python的回测框架 pyalgotrade - 一个Python的事件驱动回测框架 pyalgotrade-cn - Pyalgotrade-cn在原版pyalgotrade的基础上加入了A股历史行情回测，并整合了tushare提供实时行情。 ricequant/rqalpha - RQalpha: Ricequant 开源的基于Python的回测引擎 quantdigger - 基于python的量化回测框架,借鉴了主流商业软件（比如TB, 金字塔）简洁的策略语法 pyktrader - 基于pyctp接口，并采用vnpy的eventEngine，使用tkinter作为GUI的python交易平台 QuantConnect/Lean - Lean Algorithmic Trading Engine by QuantConnect (C#, Python, F#, VB, Java) QUANTAXIS - QUANTAXIS 量化金融策略框架 - 中小型策略团队解决方案 交易API 上海期货信息技术有限公司CTP API - 期货交易所提供的API 飞马快速交易平台 - 上海金融期货信息技术有限公司 - 飞马 大连飞创信息技术有限公司 - 飞创 vnpy - 基于python的开源交易平台开发框架 QuantBox/XAPI2 - 统一行情交易接口第2版 easytrader - 提供券商华泰/佣金宝/银河/广发/雪球的基金、股票自动程序化交易，量化交易组件 实盘易（SDK） - 管理通达信等交易终端，提供基于 HTTP 协议的 RESTFul API；各大在线量化交易平台实盘解决方案 IB API | Interactive Brokers - 盈透证券的交易API 编程Python安装 Anaconda - 推荐通过清华大学镜像 下载安装 Python Extension Packages for Windows - Christoph Gohlke - Windows用户从这里可以下载许多python库的预编译包 教程 Python | Codecademy 用 Python 玩转数据 - 南京大学 | Coursera Introduction to Data Science in Python - University of Michigan | Coursera The Python Tutorial — Python 3.5.2 documentation Python for Finance Algorithmic Thinking - Python 算法思维训练 库 awesome-python: A curated list of awesome Python frameworks, libraries, software and resources pandas - Python做数据分析的基础 pyql: Cython QuantLib wrappers ffn - 绩效评估 ta-lib: Python wrapper for TA-Lib (http://ta-lib.org/). - 技术指标 StatsModels: Statistics in Python — statsmodels documentation - 常用统计模型 arch: ARCH models in Python - 时间序列 pyfolio: Portfolio and risk analytics in Python - 组合风险评估 twosigma/flint: A Time Series Library for Apache Spark - Apache Spark上的时间序列库 PyFlux - Python 的时间序列建模(频率派和贝叶斯) R安装 The Comprehensive R Archive Network - 从国内清华镜像下载安装 RStudio - R的常用开发平台下载 教程 Free Introduction to R Programming Online Course - datacamp的在线学习 R Programming - 约翰霍普金斯大学 | Coursera Intro to Computational Finance with R - 用R进行计算金融分析 库 CRAN Task View: Empirical Finance - CRAN官方的R金融相关包整理 qinwf/awesome-R: A curated list of awesome R packages, frameworks and software. - R包的awesome C++教程 C++程序设计 - 北京大学 郭炜 基于Linux的C++ - 清华大学 乔林 面向对象程序设计（C++） - 清华大学 徐明星 C++ Design Patterns and Derivatives Pricing - C++设计模式 C++ reference - cppreference.com - 在线文档 库 fffaraz/awesome-cpp: A curated list of awesome C/C++ frameworks, libraries, resources, and shiny things. - C++库整理 rigtorp/awesome-modern-cpp: A collection of resources on modern C++ - 现代C++库整理 QuantLib: a free/open-source library for quantitative finance libtrading/libtrading: Libtrading, an ultra low-latency trading connectivity library for C and C++. Julia教程 Learning Julia - 官方整理 QUANTITATIVE ECONOMICS with Julia - 经济学诺奖获得者Thomas Sargent教你Julia在量化经济的应用。 库 Quantitative Finance in Julia - 多数为正在实现中，感兴趣的可以参与 编程论坛 Stack Overflow - 对应语言的tag SegmentFault - 对应语言的tag 编程能力在线训练 Solve Programming Questions | HackerRank - 包含常用语言(C++, Java, Python, Ruby, SQL)和相关计算机应用技术(算法、数据结构、数学、AI、Linux Shell、分布式系统、正则表达式、安全)的教程和挑战。 LeetCode Online Judge - C, C++, Java, Python, C#, JavaScript, Ruby, Bash, MySQL在线编程训练 论坛 Quantitative Finance StackExchange - stackexchange 系列的 quant 论坛 JoinQuant社区 - JoinQuant社区 优矿社区 - 优矿社区 RiceQuant量化社区 - RiceQuant量化社区 掘金量化社区 - 掘金量化社区 清华大学学生经济金融论坛 - 清华大学学生金融数据与量化投资协会主办 书籍 My Life as a Quant: Reflections on Physics and Finance - In My Life as a Quant, Emanuel Derman relives his exciting journey as one of the first high-energy particle physicists to migrate to Wall Street. 量化交易 - Ernest P. Chan撰写的量化投资理论 量化投资与对冲基金丛书：波动率交易 Following the Trend Statistical Inference - 统计推断入门 All of Nonparametric Statistics - 非参统计入门 The Elements of Statistical Learning - Data Mining, Inference, and Prediction Analysis of Financial Time Series - Ruey S. Tsay 的时间序列分析 Options, Futures, and Other Derivatives - 期权期货等衍生品 论文 awesome-quant/papers.md 值得关注的信息源 Quantitative Finance arxiv 雪球工程师1号 - 财经社交网络雪球的量化相关账号。 Ricequant量化 - Ricequant量化平台的雪球账号。 量化哥-优矿Uqer - 优矿Uqer量化平台的雪球账号。 宽客 (Quant) - 索引 - 知乎 量化投资与机器学习 - 微信公众号 THU量协 - 微信公众号 优矿量化实验室 - 微信公众号 Ricequant - 微信公众号 鲁明量化全视角 - 微信公众号 政策 中国证券监督管理委员会 考试报名-中国证券业协会 - 证券从业资格报名 中国证券投资基金业协会 - 内有相关法规教育和从业资格报名入口 大连商品交易所 上海期货交易所首页 郑州商品交易所网站 上海证券交易所 深圳证券交易所 其他Quant资源索引 Quantitative Finance Reading List - QuantStart Master reading list for Quants, MFE (Financial Engineering) students | QuantNet Community 其他 Awesome 列表 英文版 awesome-quant wilsonfreitas/awesome-quant: A curated list of insanely awesome libraries, packages and resources for Quants (Quantitative Finance) Other awesome lists awesome-awesomeness. Even more lists awesome. Another list? list. WTF! awesome-awesome-awesome. Analytics awesome-analytics.","categories":[],"tags":[]},{"title":"Caffe、TensorFlow、MXnet三个开源库对比","slug":"comparethreeopenlib","date":"2017-07-18T12:28:02.683Z","updated":"2017-07-18T12:28:02.683Z","comments":true,"path":"2017/07/18/comparethreeopenlib/","link":"","permalink":"http://yanggw.tk/2017/07/18/comparethreeopenlib/","excerpt":"","text":"最近Google开源了他们内部使用的深度学习框架TensorFlow[1]，结合之前开源的MXNet[2]和Caffe[3]，对三个开源库做了一些讨论，其中只有Caffe比较仔细的看过源代码，其他的两个库仅阅读官方文档和一些研究者的评论博客有感，本文首先对三个库有个整体的比较，再针对一些三者设计的不同数据结构、计算方式、gpu的选择方式等方面做了比较详细的讨论。表格1是三者的一些基本情况的记录和比较。其中示例指的是官方给出的example是否易读易理解，因为TensorFlow直接安装python包，所以一开始没有去下源代码，从文档中找example不如另外两个下源码直接。实际上TensorFlow更加像一套独立的python接口，它不止能够完成CNN/RNN的功能，还见到过有人用它做Kmeans聚类。这个表主观因素比较明显，仅供参考。 库名称 开发语言 支持接口 安装难度(ubuntu) 文档风格 示例 支持模型 上手难易 Caffe c++/cuda c++/python/matlab * * * CNN ** MXNet c++/cuda python/R/Julia ** * ** CNN/RNN * TensorFlow c++/cuda/python c++/python * ** * CNN/RNN/… * ###1.基本数据结构 库名称 数据结构名称 设计方式 Caffe Blob 存储的数据可以看成N维的c数组，有(n,k,h,w)四个维数，一个blob里面有两块数据空间保存前向和后向求导数据 MXNet NDArray 提供cpu/gpu的矩阵和矢量计算，能够自动并行 TensorFlow tensor 相当于N维的array或者list，维数可变，数据类型一旦定义不能改变 caffe的数据存储类blob，当把数据可以看成是一个N维的c数组，它们的存储空间连续。例如存储图片是4维(num, channel, height, width),变量(n,k,h,w)在数组中存储位置为((n*K+k)*H+h)*W+w。blob有以下三个特征[4]: 两块数据，一个是原始data，一个是求导值diff 两种内存分配方式，一种是分配在cpu上，一种是分配在gpu上，通过前缀cpu、gpu来区分 两种访问方式，一种是不能改变数据，一种能改变数据 Caffe最让我觉得精妙的地方在于一个blob保存前向和后向的数据。虽然就代码本身而言，前向数据是因为输入数据不同而改变，后向求导是因为求导不同而改变，根据SRP原则，在一个类里面因为两个原因而改变了数据这种是不合适的设计。但是从逻辑层面，前向数据的改变引起了反向求导的不同，它们实际上是一起在改变，本身应该是一个整体。所以我很喜欢这个设计，虽然基本上其他框架中都是将两个数据给分离出来，caffe2也不知是否保留。 MXNet的NDArray类似numpy.ndarray，也支持把数据分配在gpu或者cpu上进行运算。但是与numpy和caffe不同的是，当在操作NDArray，它能自动的将需要执行的数据分配到多台gpu和cpu上进行计算，从而完成高速并行。在调用者的眼中代码可能只是一个单线程的，数据只是分配到了一块内存中，但是背后执行的过程实际上是并行的。将指令(加减等)放入中间引擎，然后引擎来评估哪些数据有依赖关系，哪些能并行处理。定义好数据之后将它绑定到网络中就能处理它了。 TensorFlow的tensor，它相当于N维的array或者list，与MXNet类似，都是采用了以python调用的形式展现出来。某个定义好的tensor的数据类型是不变的，但是维数可以动态改变。用tensor rank和TensorShape来表示它的维数（例如rank为2可以看成矩阵，rank为1可以看成向量）。tensor是个比较中规中矩的类型。唯一特别的地方在于在TensorFlow构成的网络中，tensor是唯一能够传递的类型，而类似于array、list这种不能当成输入。 值得一提的是cuda-convnet采用的数据结构是NVMatrix，NV表示数据分配在gpu上，即将所有变量都当成矩阵来处理，它只有两维，它算是最早用cuda实现的深度学习框架，而上面三种框架都采用了多维可变维的思想，这种可变维在用矩阵做卷积运算的时候是很有效的。 ###2.网络实现方式 Caffe是典型的功能（过程）计算方式，它首先按照每一个大功能（可视化、损失函数、非线性激励、数据层）将功能分类并针对部分功能实现相应的父类，再将具体的功能实现成子类，或者直接继承Layer类，从而形成了XXXLayer的形式。然后将不同的layer组合起来就成了net。 图1 caffe的网络结构 MXNet是符号计算和过程计算混合[5]，它设计了Symbol大类，提供了很多符号运算的接口，每个symbol定义了对数据进行怎样的处理，symbol只是定义处理的方式，这步还并未真正的执行运算。其中一个需要注意的是symbol里面有Variable，它作为承载数据的符号，定义了需要传递什么样的数据给某个Variable，并在后续的操作中将数据绑定到Variable上。下面的代码是一个使用示例，它实现了将激励函数连接到前面定义好的net后面，并给出了这一个symbol的名字和激励函数类型，从而构造出net。下图左边部分是定义symbol的合集，中间将数据绑定到Variable上之后变成了右边真正的执行流程图。 net = mx.symbol.Activation(data=net, name=&apos;relu1&apos;, act_type=&quot;relu&quot;) 图2 MXNet的网络结构 TensorFlow选择的是符号计算方式，它的程序分为计算构造阶段和执行阶段，构造阶段是构造出computation graph，computation graph就是包含一系列符号操作Operation和Tensor数据对象的流程图，跟mxnet的symbol类似，它定义好了如何进行计算（加减乘除等）、数据通过不同计算的顺序（也就是flow，数据在符号操作之间流动的感觉）。但是暂时并不读取输入来计算获得输出，而是由后面的执行阶段启动session的run来执行已经定义好的graph。这样的方式跟mxnet很相似，应该都是借鉴了theano的想法。其中TensorFlow还引入了Variable类型，它不像mxnet的Variable属于symbol（tf的operation类似mxnet的symbol），而是一个单独的类型，主要作用是存储网络权重参数，从而能够在运行过程中动态改变。tf将每一个操作抽象成了一个符号Operation，它能够读取0个或者多个Tensor对象作为输入(输出)，操作内容包括基本的数学运算、支持reduce、segment（对tensor中部分进行运算。例如tensor长度为10，可以同时计算前5个，中间2个，后面三个的和）、对image的resize、pad、crop、filpping、transposing等。tf没有像mxnet那样给出很好的图形解释或者实例(可能因为我没找到。。)，按照自己的理解画了一部分流程图。有点疑惑的是，为什么要设计Variable，tf给出的一个alexnet的example源码中，输入数据和权重都设置成了Variable，每一层的输出并未直接定义，按照tf的说法，只有tensor类型能够在网络中传递，输出的类型应该是tensor，但是由于输入和权重改变了，输出应该也在随着改变，既然如此，为何不只设计一个tensor，让tensor也能动态改变。 图3 TensorFlow的computation graph 就设计而言，TensorFlow相对于其他两个更像是一种通用的机器学习框架，而不是只针对cnn或rnn，但就现在的性能而言，tf的速度比很多开源框架都要差一点[6]。 ###3.分布式训练 Caffe和TensorFlow没有给出分布式的版本，MXNet提供了多机分布式，因而前两者只有如何控制使用多gpu。Caffe通过直接在执行指令后面加上-gpu 0,1来表示调用两个gpu0和1，只实现了数据并行，也就是在不同的gpu上执行相同网络和不同数据，caffe会实例化多个solver和net让每次处理的batch_size加倍。TensorFlow则能够自己定义某个操作执行在哪个gpu上，通过调用with tf.device(‘/gpu:2’)表示接下来的操作要在gpu2上处理，它也是数据并行。MXNet通过执行脚本时指定多机节点个数来确定在几台主机上运行，也是数据并行。MXNet的多gpu分配和它们之间数据同步是通过MXNet的数据同步控制KVStore来完成的。 KVStore的使用首先要创建一个kv空间，这个空间用来在不同gpu不同主机间分享数据，最基本的操作是push和pull，push是把数据放入这个空间，pull是从这个空间取数据。这个空间内保存的是key-value([int, NDArray])，在push/pull的时候来指定到哪个key。下面的代码将不同的设备上分配的b[i]通过key3在kv空间累加再输出到a，从而完成了对多gpu的处理。这个是个非常棒的设计，提供了很大的自由度，并且为开发者减少了控制底层数据传输的麻烦。 gpus = [mx.gpu(i) for i in range(4)] b = [mx.nd.ones(shape, gpu) for gpu in gpus] kv.push(3, b) kv.pull(3, out = a) 之前有看过一篇论文，如何将卷积网络放在多gpu上训练，论文中有两种方法，一种是常用的数据并行，另一种是模型并行。模型并行指的是将一个完整的网络切分成不同块放在不同gpu上执行，每个gpu可能只处理某一张图的四分之一。采用模型并行很大程度上是因为显存不够放不下整个网络的数据，而现在gpu的功能性能提高，一个gpu已经能够很好的解决显存不够的问题，再加上模型并行会有额外的通信开销，因此开源框架采用了数据并行，用来提高并行度。 ###4.小结 上面针对三个框架的不同方面进行了一些分析与比较，可以看出TensorFlow和MXNet有一些相似的地方，都是想做成更加通用的深度学习框架，貌似caffe2也会采用符号计算[5]，说明以后的框架会更加的偏向通用性和高效，个人最喜欢的是caffe，也仿造它和cuda-convnet的结构写过卷积网络，如果是想提高编程能力可以多看看这两个框架的源码。而MXNet给人的感觉是非常用心，更加注重高效，文档也非常的详细，不仅上手很容易，运用也非常的灵活。TensorFlow则是功能很齐全，能够搭建的网络更丰富而不是像caffe仅仅局限在CNN。总之框架都是各有千秋，如何选择也仅凭个人的喜好，然而google这个大杀器一出现引起的关注度还是最大的，虽然现在单机性能还不够好，但是看着长长的开发人员名单，也只能说大牛多就是任性。 参考: [1] http://tensorflow.org/ [2] http://mxnet.readthedocs.org/en/latest/index.html [3] http://caffe.berkeleyvision.org/ [4] [caffe]的项目架构和源码解析 [5] 如何评价Tensorflow和其它深度学习系统 [6] Imagenet Winners Benchmarking","categories":[{"name":"project experience","slug":"project-experience","permalink":"http://yanggw.tk/categories/project-experience/"}],"tags":[]},{"title":"","slug":"machine-learning-resources","date":"2017-07-18T12:28:02.683Z","updated":"2017-07-18T12:28:02.683Z","comments":true,"path":"2017/07/18/machine-learning-resources/","link":"","permalink":"http://yanggw.tk/2017/07/18/machine-learning-resources/","excerpt":"","text":"#大数据/数据挖掘/推荐系统/机器学习相关资源 Share my personal resources ##书籍 各种书~各种ppt~更新中~ http://pan.baidu.com/s/1EaLnZ 机器学习经典书籍小结 http://www.cnblogs.com/snake-hand/archive/2013/06/10/3131145.html 机器学习&amp;深度学习经典资料汇总 http://www.thebigdata.cn/JiShuBoKe/13299.html #视频 浙大数据挖掘系列 http://v.youku.com/v_show/id_XNTgzNDYzMjg=.html?f=2740765 用Python做科学计算 http://www.tudou.com/listplay/fLDkg5e1pYM.html R语言视频 http://pan.baidu.com/s/1koSpZ Hadoop视频 http://pan.baidu.com/s/1b1xYd 42区 . 技术 . 创业 . 第二讲 http://v.youku.com/v_show/id_XMzAyMDYxODUy.html 加州理工学院公开课：机器学习与数据挖掘 http://v.163.com/special/opencourse/learningfromdata.html ##QQ群 机器学习&amp;模式识别 246159753 数据挖掘机器学习 236347059 推荐系统 274750470 ##Github ###推荐系统 推荐系统开源软件列表汇总和评点 http://in.sdo.com/?p=1707 Mrec(Python) https://github.com/mendeley/mrec Crab(Python) https://github.com/muricoca/crab Python-recsys(Python) https://github.com/ocelma/python-recsys CofiRank(C++) https://github.com/markusweimer/cofirank GraphLab(C++) https://github.com/graphlab-code/graphlab EasyRec(Java) https://github.com/hernad/easyrec Lenskit(Java) https://github.com/grouplens/lenskit Mahout(Java) https://github.com/apache/mahout Recommendable(Ruby) https://github.com/davidcelis/recommendable ###库 NLTK https://github.com/nltk/nltk Pattern https://github.com/clips/pattern Pyrallel https://github.com/pydata/pyrallel Theano https://github.com/Theano/Theano Pylearn2 https://github.com/lisa-lab/pylearn2 TextBlob https://github.com/sloria/TextBlob MBSP https://github.com/clips/MBSP Gensim https://github.com/piskvorky/gensim Langid.py https://github.com/saffsd/langid.py Jieba https://github.com/fxsjy/jieba xTAS https://github.com/NLeSC/xtas NumPy https://github.com/numpy/numpy SciPy https://github.com/scipy/scipy Matplotlib https://github.com/matplotlib/matplotlib scikit-learn https://github.com/scikit-learn/scikit-learn Pandas https://github.com/pydata/pandas MDP http://mdp-toolkit.sourceforge.net/ PyBrain https://github.com/pybrain/pybrain PyML http://pyml.sourceforge.net/ Milk https://github.com/luispedro/milk PyMVPA https://github.com/PyMVPA/PyMVPA 博客 周涛 http://blog.sciencenet.cn/home.php?mod=space&amp;uid=3075 Greg Linden http://glinden.blogspot.com/ Marcel Caraciolo http://aimotion.blogspot.com/ RsysChina http://weibo.com/p/1005051686952981 推荐系统人人小站 http://zhan.renren.com/recommendersystem 阿稳 http://www.wentrue.net 梁斌 http://weibo.com/pennyliang 刁瑞 http://diaorui.net guwendong http://www.guwendong.com xlvector http://xlvector.net 懒惰啊我 http://www.cnblogs.com/flclain/ free mind http://blog.pluskid.org/ lovebingkuai http://lovebingkuai.diandian.com/ LeftNotEasy http://www.cnblogs.com/LeftNotEasy LSRS 2013 http://graphlab.org/lsrs2013/program/ Google小组 https://groups.google.com/forum/#!forum/resys Journal of Machine Learning Research http://jmlr.org/ 在线的机器学习社区 http://www.52ml.net/16336.html 清华大学信息检索组 http://www.thuir.cn 我爱自然语言处理 http://www.52nlp.cn/ ##文章 心中永远的正能量 http://blog.csdn.net/yunlong34574 机器学习最佳入门学习资料汇总 http://article.yeeyan.org/view/22139/410514 Books for Machine Learning with R http://www.52ml.net/16312.html 是什么阻碍了你的机器学习目标？ http://www.52ml.net/16436.htm 推荐系统初探 http://yongfeng.me/attach/rs-survey-zhang-slices.pdf 推荐系统中协同过滤算法若干问题的研究 http://pan.baidu.com/s/1bnjDBYZ Netflix 推荐系统：第一部分 http://blog.csdn.net/bornhe/article/details/8222450 Netflix 推荐系统：第二部分 http://blog.csdn.net/bornhe/article/details/8222497 探索推荐引擎内部的秘密 http://www.ibm.com/developerworks/cn/web/1103_zhaoct_recommstudy1/index.html 推荐系统resys小组线下活动见闻2009-08-22 http://www.tuicool.com/articles/vUvQVn Recommendation Engines Seminar Paper, Thomas Hess, 2009: 推荐引擎的总结性文章 http://www.slideshare.net/antiraum/recommender-engines-seminar-paper Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions, Adomavicius, G.; Tuzhilin, A., 2005 http://dl.acm.org/citation.cfm?id=1070751 A Taxonomy of RecommenderAgents on the Internet, Montaner, M.; Lopez, B.; de la Rosa, J. L., 2003 http://www.springerlink.com/index/KK844421T5466K35.pdf A Course in Machine Learning http://ciml.info/ 基于mahout构建社会化推荐引擎 http://www.doc88.com/p-745821989892.html 个性化推荐技术漫谈 http://blog.csdn.net/java060515/archive/2007/04/19/1570243.aspx Design of Recommender System http://www.slideshare.net/rashmi/design-of-recommender-systems How to build a recommender system http://www.slideshare.net/blueace/how-to-build-a-recommender-system-presentation 推荐系统架构小结 http://blog.csdn.net/idonot/article/details/7996733 System Architectures for Personalization and Recommendation http://techblog.netflix.com/2013/03/system-architectures-for.html The Netflix Tech Blog http://techblog.netflix.com/ 百分点推荐引擎——从需求到架构http://www.infoq.com/cn/articles/baifendian-recommendation-engine 推荐系统 在InfoQ上的内容 http://www.infoq.com/cn/recommend 推荐系统实时化的实践和思考 http://www.infoq.com/cn/presentations/recommended-system-real-time-practice-thinking 质量保证的推荐实践 http://www.infoq.com/cn/news/2013/10/testing-practice/ 推荐系统的工程挑战 http://www.infoq.com/cn/presentations/Recommend-system-engineering 社会化推荐在人人网的应用 http://www.infoq.com/cn/articles/zyy-social-recommendation-in-renren/ 利用20%时间开发推荐引擎 http://www.infoq.com/cn/presentations/twenty-percent-time-to-develop-recommendation-engine 使用Hadoop和 Mahout实现推荐引擎 http://www.jdon.com/44747 SVD 简介 http://www.cnblogs.com/FengYan/archive/2012/05/06/2480664.html Netflix推荐系统：从评分预测到消费者法则 http://blog.csdn.net/lzt1983/article/details/7696578 论文《推荐系统实战》引用 P1 A Guide to Recommender System P4 Cross Selling P6 课程：Data Mining and E-Business: The Social Data Revolution P7) An Introduction to Search Engines and Web Navigation p7 p8 p9 (The Youtube video recommendation system) p9 (PPT: Music Recommendation and Discovery) p12 P13 (Digg Recommendation Engine Updates) P16 (The Learning Behind Gmail Priority Inbox)p17 (Accurate is not always good: How Accuracy Metrics have hurt Recommender Systems) P20 (Don’t Look Stupid: Avoiding Pitfalls when Recommending Research Papers)P23 (Major componets of the gravity recommender system) P25 (What is a Good Recomendation Algorithm?) P26 (Evaluation Recommendation Systems) P27 (Music Recommendation and Discovery in the Long Tail) P29 (Internation Workshop on Novelty and Diversity in Recommender Systems) p29 (Auralist: Introducing Serendipity into Music Recommendation ) P30 (Metrics for evaluating the serendipity of recommendation lists) P30 (The effects of transparency on trust in and acceptance of a content-based art recommender) P31 (Trust-aware recommender systems) P31 (Tutorial on robutness of recommender system) P32 (Five Stars Dominate Ratings) P37 (Book-Crossing Dataset) P38 (Lastfm Dataset) P39 浅谈网络世界的Power Law现象 P39 (MovieLens Dataset) P42 (Empirical Analysis of Predictive Algorithms for Collaborative Filtering) P49 (Digg Vedio) P50 (Amazon.com Recommendations Item-to-Item Collaborative Filtering) P59 (Greg Linden Blog) P63 (One-Class Collaborative Filtering) P67 (Stochastic Gradient Descent) P68 (Latent Factor Models for Web Recommender Systems) P70 (Bipatite Graph) P73 (Random-Walk Computation of Similarities between Nodes of a Graph with Application to Collaborative Recommendation) P74 (Topic Sensitive Pagerank) P74 (FAST ALGORITHMS FOR SPARSE MATRIX INVERSE COMPUTATIONS) P77 (LIFESTYLE FINDER: Intelligent User Profiling Using Large-Scale Demographic Data) P80 ( adaptive bootstrapping of recommender systems using decision trees) P87 (Vector Space Model) P90 (冷启动问题的比赛) P92 (Latent Dirichlet Allocation) P92 (Kullback–Leibler divergence) P93 (About The Music Genome Project) P94 (Pandora Music Genome Project Attributes) P94 (Jinni Movie Genome) P94 (Tagsplanations: Explaining Recommendations Using Tags) P96 (Tag Wikipedia) P96) (Nurturing Tagging Communities) P100 (Why We Tag: Motivations for Annotation in Mobile and Online Media ) P100 (Delicious Dataset) P101 (Finding Advertising Keywords on Web Pages) P118 (基于标签的推荐系统比赛) P119 (Tag recommendations based on tensor dimensionality reduction）P119 (latent dirichlet allocation for tag recommendation) P119 (Folkrank: A ranking algorithm for folksonomies) P119 (Tagommenders: Connecting Users to Items through Tags) P119 (The Quest for Quality Tags) P120 (Challenge on Context-aware Movie Recommendation) P123 (The Lifespan of a link) P125 (Temporal Diversity in Recommender Systems) P129 (Evaluating Collaborative Filtering Over Time) P129 (Hotpot) P139 (Google Launches Hotpot, A Recommendation Engine for Places) P139 (geolocated recommendations) P140 (A Peek Into Netflix Queues) P141 (Distance Browsing in Spatial Databases1) P142 (Efﬁcient Evaluation of k-Range Nearest Neighbor Queries in Road Networks) P143 (Global Advertising: Consumers Trust Real Friends and Virtual Strangers the Most) P144 (Suggesting Friends Using the Implicit Social Graph) P145 (Friends &amp; Frenemies: Why We Add and Remove Facebook Friends) P147 (Stanford Large Network Dataset Collection) P149 (Workshop on Context-awareness in Retrieval and Recommendation) P151 (Factorization vs. Regularization: Fusing Heterogeneous Social Relationships in Top-N Recommendation) P153 (Twitter, an Evolving Architecture) P154 (Recommendations in taste related domains) P155 (Comparing Recommendations Made by Online Systems and Friends) P155 (EdgeRank: The Secret Sauce That Makes Facebook’s News Feed Tick) P157 (Speak Little and Well: Recommending Conversations in Online Social Streams) P158 (Learn more about “People You May Know”) P160 (“Make New Friends, but Keep the Old” – Recommending People on Social Networking Sites) P164 (SoRec: Social Recommendation Using Probabilistic Matrix) P165 (A Dynamic Bayesian Network Click Model for Web Search Ranking) P177 (Online Learning from Click Data for Sponsored Search) P177 (Contextual Advertising by Combining Relevance with Click Feedback) P177 (Hulu 推荐系统架构) P178 (MyMedia Project) P178 (item-based collaborative filtering recommendation algorithms) P185 (Learning Collaborative Information Filters) P186 (Simon Funk Blog:Funk SVD) P187 (Factor in the Neighbors: Scalable and Accurate Collaborative Filtering) P190 (Time-dependent Models in Collaborative Filtering based Recommender System) P193 (Collaborative filtering with temporal dynamics) P193 (Least Squares Wikipedia) P195 (Improving regularized singular value decomposition for collaborative filtering) P195 (Factorization Meets the Neighborhood: a Multifaceted Collaborative Filtering Model) P195 【CIKM 2012 Best Stu Paper】Incorporating Occupancy into Frequent Pattern Mini.pdf 【CIKM 2012 poster】A Latent Pairwise Preference Learning Approach for Recomme.pdf 【CIKM 2012 poster】An Effective Category Classification Method Based on a Lan.pdf 【CIKM 2012 poster】Learning to Rank for Hybrid Recommendation.pdf 【CIKM 2012 poster】Learning to Recommend with Social Relation Ensemble.pdf 【CIKM 2012 poster】Maximizing Revenue from Strategic Recommendations under De.pdf 【CIKM 2012 poster】On Using Category Experts for Improving the Performance an.pdf 【CIKM 2012 poster】Relation Regularized Subspace Recommending for Related Sci.pdf 【CIKM 2012 poster】Top-N Recommendation through Belief Propagation.pdf 【CIKM 2012 poster】Twitter Hyperlink Recommendation with User-Tweet-Hyperlink.pdf 【CIKM 2012 short】Automatic Query Expansion Based on Tag Recommendation.pdf 【CIKM 2012 short】Graph-Based Workflow Recommendation- On Improving Business .pdf 【CIKM 2012 short】Location-Sensitive Resources Recommendation in Social Taggi.pdf 【CIKM 2012 short】More Than Relevance- High Utility Query Recommendation By M.pdf 【CIKM 2012 short】PathRank- A Novel Node Ranking Measure on a Heterogeneous G.pdf 【CIKM 2012 short】PRemiSE- Personalized News Recommendation via Implicit Soci.pdf 【CIKM 2012 short】Query Recommendation for Children.pdf 【CIKM 2012 short】The Early-Adopter Graph and its Application to Web-Page Rec.pdf 【CIKM 2012 short】Time-aware Topic Recommendation Based on Micro-blogs.pdf 【CIKM 2012 short】Using Program Synthesis for Social Recommendations.pdf 【CIKM 2012】A Decentralized Recommender System for Effective Web Credibility .pdf 【CIKM 2012】A Generalized Framework for Reciprocal Recommender Systems.pdf 【CIKM 2012】Dynamic Covering for Recommendation Systems.pdf 【CIKM 2012】Efficient Retrieval of Recommendations in a Matrix Factorization .pdf 【CIKM 2012】Exploring Personal Impact for Group Recommendation.pdf 【CIKM 2012】LogUCB- An Explore-Exploit Algorithm For Comments Recommendation.pdf 【CIKM 2012】Metaphor- A System for Related Search Recommendations.pdf 【CIKM 2012】Social Contextual Recommendation.pdf 【CIKM 2012】Social Recommendation Across Multiple Relational Domains.pdf 【COMMUNICATIONS OF THE ACM】Recommender Systems.pdf 【ICDM 2012 short___】Multiplicative Algorithms for Constrained Non-negative M.pdf 【ICDM 2012 short】Collaborative Filtering with Aspect-based Opinion Mining- A.pdf 【ICDM 2012 short】Learning Heterogeneous Similarity Measures for Hybrid-Recom.pdf 【ICDM 2012 short】Mining Personal Context-Aware Preferences for Mobile Users.pdf 【ICDM 2012】Link Prediction and Recommendation across Heterogenous Social Networks.pdf 【IEEE Computer Society 2009】Matrix factorization techniques for recommender .pdf 【IEEE Consumer Communications and Networking Conference 2006】FilmTrust movie.pdf 【IEEE Trans on Audio, Speech and Laguage Processing 2010】Personalized music .pdf 【IEEE Transactions on Knowledge and Data Engineering 2005】Toward the next ge.pdf 【INFOCOM 2011】Bayesian-inference Based Recommendation in Online Social Network.pdf 【KDD 2009】Learning optimal ranking with tensor factorization for tag recomme.pdf 【SIGIR 2009】Learning to Recommend with Social Trust Ensemble.pdf 【SIGIR 2012】Adaptive Diversification of Recommendation Results via Latent Fa.pdf 【SIGIR 2012】Collaborative Personalized Tweet Recommendation.pdf 【SIGIR 2012】Dual Role Model for Question Recommendation in Community Questio.pdf 【SIGIR 2012】Exploring Social Influence for Recommendation - A Generative Mod.pdf 【SIGIR 2012】Increasing Temporal Diversity with Purchase Intervals.pdf 【SIGIR 2012】Learning to Rank Social Update Streams.pdf 【SIGIR 2012】Personalized Click Shaping through Lagrangian Duality for Online.pdf 【SIGIR 2012】Predicting the Ratings of Multimedia Items for Making Personaliz.pdf 【SIGIR 2012】TFMAP-Optimizing MAP for Top-N Context-aware Recommendation.pdf 【SIGIR 2012】What Reviews are Satisfactory- Novel Features for Automatic Help.pdf 【SIGKDD 2012】 A Semi-Supervised Hybrid Shilling Attack Detector for Trustwor.pdf 【SIGKDD 2012】 RecMax- Exploiting Recommender Systems for Fun and Profit.pdf 【SIGKDD 2012】Circle-based Recommendation in Online Social Networks.pdf 【SIGKDD 2012】Cross-domain Collaboration Recommendation.pdf 【SIGKDD 2012】Finding Trending Local Topics in Search Queries for Personaliza.pdf 【SIGKDD 2012】GetJar Mobile Application Recommendations with Very Sparse Datasets.pdf 【SIGKDD 2012】Incorporating Heterogenous Information for Personalized Tag Rec.pdf 【SIGKDD 2012】Learning Personal+Social Latent Factor Model for Social Recomme.pdf 【VLDB 2012】Challenging the Long Tail Recommendation.pdf 【VLDB 2012】Supercharging Recommender Systems using Taxonomies for Learning U.pdf 【WWW 2012 Best paper】Build Your Own Music Recommender by Modeling Internet R.pdf 【WWW 2013】A Personalized Recommender System Based on User’s Informatio.pdf 【WWW 2013】Diversified Recommendation on Graphs-Pitfalls, Measures, and Algorithms.pdf 【WWW 2013】Do Social Explanations Work-Studying and Modeling the Effects of S.pdf 【WWW 2013】Generation of Coalition Structures to Provide Proper Groups’.pdf 【WWW 2013】Learning to Recommend with Multi-Faceted Trust in Social Networks.pdf 【WWW 2013】Multi-Label Learning with Millions of Labels-Recommending Advertis.pdf 【WWW 2013】Personalized Recommendation via Cross-Domain Triadic Factorization.pdf 【WWW 2013】Profile Deversity in Search and Recommendation.pdf 【WWW 2013】Real-Time Recommendation of Deverse Related Articles.pdf 【WWW 2013】Recommendation for Online Social Feeds by Exploiting User Response.pdf 【WWW 2013】Recommending Collaborators Using Keywords.pdf 【WWW 2013】Signal-Based User Recommendation on Twitter.pdf 【WWW 2013】SoCo- A Social Network Aided Context-Aware Recommender System.pdf 【WWW 2013】Tailored News in the Palm of Your HAND-A Multi-Perspective Transpa.pdf 【WWW 2013】TopRec-Domain-Specific Recommendation through Community Topic Mini.pdf 【WWW 2013】User’s Satisfaction in Recommendation Systems for Groups-an .pdf 【WWW 2013】Using Link Semantics to Recommend Collaborations in Academic Socia.pdf 【WWW 2013】Whom to Mention-Expand the Diffusion of Tweets by @ Recommendation.pdf Recommender+Systems+Handbook.pdf tutorial.pdf ##各个领域的推荐系统 图书 Amazon 豆瓣读书 当当网 新闻 Google News Genieo Getprismatic http://getprismatic.com/ 电影 Netflix Jinni MovieLens Rotten Tomatoes Flixster MTime 音乐 豆瓣电台 Lastfm Pandora Mufin Lala EMusic Ping 虾米电台 Jing.FM 视频 Youtube Hulu Clciker 文章 CiteULike Google Reader StumbleUpon 旅游 Wanderfly TripAdvisor 社会网络 Facebook Twitter 综合 Amazon GetGlue Strands Hunch ##欢迎贡献资源~~待续","categories":[],"tags":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://yanggw.tk/tags/Machine-Learning/"}]},{"title":"","slug":"makedown","date":"2017-07-18T12:28:02.683Z","updated":"2017-07-18T12:28:02.683Z","comments":true,"path":"2017/07/18/makedown/","link":"","permalink":"http://yanggw.tk/2017/07/18/makedown/","excerpt":"","text":"Markdown 工具下载 Windows 用户推荐使用编辑器 MarkdownPad下载地址：http://markdownpad.com Mac 用户推荐使用编辑器 Mou下载地址：http://25.io/mou 标题在标题内容前添加 # + 空格 就可以实现标题样式的添加： 一级标题就添加一个 # + 空格，例如：# 我是一级标题 二级标题就添加两个 # + 空格，例如：## 我是二级标题。 三级标题就添加三个 # + 空格，例如：### 我是三级标题。 依次类推… 特殊文字处理换行书写示例： 12我是第一行（后面有两个空格） 我是第二行 效果： 我是第一行（后面有两个空格）我是第二行 加粗书写示例： 1**我是粗体** 效果：我是粗体 标亮书写示例： 1`请把我标亮` 效果： 请把我标亮 列表一级列表（不带序号）书写示例： 12- 列表 1（减号 + 空格）- 列表 2 效果： 列表 1（减号 + 空格） 列表 2 一级列表（带序号）书写示例： 121. 列表 1（自然数 + 点 + 空格）2. 列表 2 效果： 列表 1（自然数 + 点 + 空格） 列表 2 二级列表（不带序号）书写示例： 1234- 列表 1（一级列表：减号 + 空格） - 列表 1.1（二级列表：空格 + 减号 + 空格） - 列表 1.2- 列表 2 效果： 列表 1（一级列表：减号 + 空格） 列表 1.1（二级列表：空格 + 减号 + 空格） 列表 1.2 列表 2 添加图片书写示例： 1![图片描述性文字](图片相对地址) 效果： 添加超链接书写示例： 1[链接描述文字（可见）](链接地址) 效果： 点击跳转到极客学院 引用书写示例： 12&gt;注意： 我是引用的内容（空一行就结束引用）。 效果： 注意：我是引用的内容（空一行就结束引用）。 添加代码书写示例： 1234// 代码区域的上下分别用三个 ` 括起来public class Person &#123; // 代码缩进请使用 四个空格，不要使用 Tab&#125; 效果： 1234// 代码区域的上下分别用三个 ` 括起来public class Person &#123; // 代码缩进请使用 四个空格，不要使用 Tab&#125; 锚点使用书写示例： 123极客学院是中国最大的 IT 职业在线教育平台。[[锚点名]](#footnode)[锚点名]&lt;a name=&quot;footnode&quot;&gt;&lt;/a&gt;我的示例。 效果： 极客学院是中国最大的 IT 职业在线教育平台。[锚点名] [锚点名]我的示例。 特别注意 英文字母与中文之间需要两边空格（英文与符号之间不空格） 高亮英文之间需要两边空格 代码符号```上面需要空一行，结束123456784. 中文之间和短英文之间使用中文标点5. 一篇文章中只能出现一个＃号标题6. 标题＃号之后需要空一格## 表格书写示例： Prefix Framework NS Foundation (OS X and iOS) and Application Kit (OS X) UI UIKit (iOS) AB Address Book CA Core Animation CI Core Image ``` 效果： Prefix Framework NS Foundation (OS X and iOS) and Application Kit (OS X) UI UIKit (iOS) AB Address Book CA Core Animation CI Core Image","categories":[],"tags":[]}]}